layer {
  name: "fc6_XXX"
  type: "InnerProduct"
  bottom: "roi_pool"
  top: "fc6_XXX"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc6_XXX/relu"
  type: "ReLU"
  bottom: "fc6_XXX"
  top: "fc6_XXX"
}


layer {
  name: "fc7_XXX"
  type: "InnerProduct"
  bottom: "fc6_XXX"
  top: "fc7_XXX"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "fc7_XXX/relu"
  type: "ReLU"
  bottom: "fc7_XXX"
  top: "fc7_XXX"
}

layer {
  name: "cls_score_XXX"
  type: "InnerProduct"
  bottom: "fc7_XXX"
  top: "cls_score_XXX"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  inner_product_param {
    num_output: 21
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "bbox_pred" #keep same weights
  type: "InnerProduct"
  bottom: "fc7_XXX"
  top: "bbox_pred_XXX"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls_XXX"
  type: "SoftmaxWithLoss"
  bottom: "cls_score_XXX"
  bottom: "label_XXX"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls_XXX"
  loss_weight: 0.5
    loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox_XXX"
  type: "SmoothL1Loss"
  bottom: "bbox_pred_XXX"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox_XXX"
  loss_weight: 0.1
}
